name: CI for Mahjong

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  check-go:
    name: Ensure Go modules synchronicity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: '1.14.2'
      - name: Download all Go modules
        run: |
          cd ${GITHUB_WORKSPACE}/dice && go mod download
          cd ${GITHUB_WORKSPACE}/probe && go mod download
          cd ${GITHUB_WORKSPACE}/mctl && go mod download
      - name: Check for tidyness of go.mod and go.sum
        run: |
          cd ${GITHUB_WORKSPACE}/dice && go mod tidy
          git diff --exit-code -- .
          cd ${GITHUB_WORKSPACE}/probe && go mod tidy
          git diff --exit-code -- .
          cd ${GITHUB_WORKSPACE}/mctl && go mod tidy
          git diff --exit-code -- .


  lint-go:
    name: Lint Go code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run golangci-lint for dice
        uses: golangci/golangci-lint-action@v2.0.0
        with:
          version: v1.28
          working-directory: ./dice
          args: --timeout 5m
      - name: Run golangci-lint for mctl
        uses: golangci/golangci-lint-action@v2.0.0
        with:
          version: v1.28
          working-directory: ./mctl
          args: --timeout 5m
      - name: Run golangci-lint for probe
        uses: golangci/golangci-lint-action@v2.0.0
        with:
          version: v1.28
          working-directory: ./probe
          args: --timeout 5m

  build-test-go:
    name: Testing Go code with all modules
    runs-on: ubuntu-latest
    steps:      
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test dice
        run: |
          set -ue
          cd ${GITHUB_WORKSPACE}/dice && make test
      - name: Test probe
        run: |
          set -ue
          cd ${GITHUB_WORKSPACE}/probe && make test
      - name: Test mctl
        run: |
          set -ue
          cd ${GITHUB_WORKSPACE}/mctl && make test

  build-test-ui:
    name: Testing UI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Test UI
        run: |
          set -ue
          cd ${GITHUB_WORKSPACE}/ui
          npm install
          npm run test:nowatch



  # internal-test-go:
  #   runs-on: ubuntu-latest
  #   steps:      
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-southeast-1
        
  #     - name: "AWS CodeBuild run build"
  #       uses: aws-actions/aws-codebuild-run-build@v1.0.3
  #       with:
  #         project-name: mahjong
