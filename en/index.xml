<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Documentation on English</title><link>https://awslabs.github.io/aws-solutions-assembler/en/</link><description>Recent content in Documentation on English</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Everything is mine</copyright><lastBuildDate>Mon, 27 Jul 2020 16:23:31 +0800</lastBuildDate><atom:link href="https://awslabs.github.io/aws-solutions-assembler/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Simple EKS Cluster</title><link>https://awslabs.github.io/aws-solutions-assembler/en/examples/simple-eks-cluster/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-solutions-assembler/en/examples/simple-eks-cluster/readme/</guid><description>This example will deploy a simple EKS cluster with existing tile
Prerequisites docker cdk aws cli v2 setup aws configuration and credential file mctl Steps Make sure your aws cli is well configured, you will see something like below
$ aws configure list Name Value Type Location ---- ----- ---- -------- profile &amp;lt;not set&amp;gt; None None access_key ****************XAWA shared-credentials-file secret_key ****************qEK5 shared-credentials-file region us-east-2 config-file ~/.aws/config Lanuch dice daemon if not existing:</description></item><item><title>Nginx on EKS cluster</title><link>https://awslabs.github.io/aws-solutions-assembler/en/examples/nginx-on-eks/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-solutions-assembler/en/examples/nginx-on-eks/readme/</guid><description>This example will deploy EKS cluster first, then deploy a Nginx on that EKS cluster
The architecture is as follow:
Prerequisites docker cdk aws cli v2 setup aws configuration and credential file mctl Steps Make sure your aws cli is well configured, you will see something like below
$ aws configure list Name Value Type Location ---- ----- ---- -------- profile &amp;lt;not set&amp;gt; None None access_key ****************ABCD shared-credentials-file secret_key ****************ABCD shared-credentials-file region us-west-2 env AWS_DEFAULT_REGION Create a workspace for your local tile</description></item><item><title>EKS cluster from scratch</title><link>https://awslabs.github.io/aws-solutions-assembler/en/examples/eks-from-scratch/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-solutions-assembler/en/examples/eks-from-scratch/readme/</guid><description>This example will write a tile to deploy a EKS cluster from scratch
Prerequisites docker cdk aws cli v2 setup aws configuration and credential file mctl Steps Make sure your aws cli is well configured, you will see something like below
$ aws configure list Name Value Type Location ---- ----- ---- -------- profile &amp;lt;not set&amp;gt; None None access_key ****************XAWA shared-credentials-file secret_key ****************qEK5 shared-credentials-file region us-east-2 config-file ~/.</description></item><item><title>Installation</title><link>https://awslabs.github.io/aws-solutions-assembler/en/getting-started/installation/</link><pubDate>Mon, 27 Jul 2020 13:46:14 +0800</pubDate><guid>https://awslabs.github.io/aws-solutions-assembler/en/getting-started/installation/</guid><description>Prerequisites Install Docker Desktop Install AWS CDK AWS Configuration and Credential Setup Config aws cli credential Make sure aws cli is well configured by running the following command to check
$ aws configure list Name Value Type Location ---- ----- ---- -------- profile &amp;lt;not set&amp;gt; None None access_key ****************XAWA shared-credentials-file secret_key ****************qEK5 shared-credentials-file region us-east-2 config-file ~/.aws/config Excute aws cdk bootstrap for your first time Run cdk bootstrap aws://&amp;lt;your aws account&amp;gt;/&amp;lt;aws region&amp;gt; to bootstrap cdkï¼š</description></item><item><title>Build Your Own Tile</title><link>https://awslabs.github.io/aws-solutions-assembler/en/getting-started/build-your-own-tile/</link><pubDate>Mon, 27 Jul 2020 14:13:55 +0800</pubDate><guid>https://awslabs.github.io/aws-solutions-assembler/en/getting-started/build-your-own-tile/</guid><description>During our usage of microservices&amp;rsquo; tile(building block). You may already find that, we need two steps (define a deployment and run a deployment) to deploy VPC, IAM, EKS sort of things with best practices on AWS cloud. We totally need around 10 steps to finish deploying 2048 games on EKS.
What if we want to deploy Nginx instead?
Now, let&amp;rsquo;s create a new tile to deploy a Nginx server on top of the EKS in the previous chapter.</description></item><item><title>Usage of Hu</title><link>https://awslabs.github.io/aws-solutions-assembler/en/getting-started/usage-of-hu/</link><pubDate>Mon, 27 Jul 2020 14:22:19 +0800</pubDate><guid>https://awslabs.github.io/aws-solutions-assembler/en/getting-started/usage-of-hu/</guid><description>By using Mahjong, we can combine with multiple tiles to build up a solution infrastructure on cloud. We call it as &amp;ldquo;Hu&amp;rdquo;. We could use a tile developed by our own and combined with existing tiles from community for our own purpose. It gives you not only flexibility but also best practices on cloud.
Thinking of your microservices combination Know existing resources in community &amp;ldquo;Hu&amp;rdquo; Belows are existing tiles in the community</description></item><item><title>Simple Usage</title><link>https://awslabs.github.io/aws-solutions-assembler/en/getting-started/simple-usage/</link><pubDate>Mon, 27 Jul 2020 13:56:43 +0800</pubDate><guid>https://awslabs.github.io/aws-solutions-assembler/en/getting-started/simple-usage/</guid><description>As you know, many of contributors have built best practices into Mahjong&amp;rsquo;s building blocks. We called it &amp;ldquo;tile&amp;rdquo;
In this case, we&amp;rsquo;re going to deploy a AWS EKS cluster
You only need to define your cluster name, nodes number, instance types and k8s version. Mahjong will help you to build cluster with minimal permission, cross AZ environment
Define and build service component Know how to use Mahjong Mahjong use Yaml to control deployment and tiles definition, including:</description></item></channel></rss>