suite: Deployment configuration
templates:
  - deployment.yaml
tests:
  - it: should have 1 replica by default
    asserts:
      - equal:
          path: spec.replicas
          value: 1
  - it: should have the sepcified amount of replicas when specified via values
    set:
      deployment:
        replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3
  - it: should have a rollingUpdate strategy with default values
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 1
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 1
  - it: should have a custom merged rollingUpdate strategy with specified values
    set:
      rollingUpdate:
        maxUnavailable: 4
        vegetaForce: 9000
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 4
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 1
      - equal:
          path: spec.strategy.rollingUpdate.vegetaForce
          value: 9000
  - it: should have annotations with specified values
    set:
      deployment:
        annotations:
          containous/powpow: annotations
        podAnnotations:
          containous/powpow: podAnnotations
    asserts:
      - equal:
          path: metadata.annotations.containous/powpow
          value: annotations
      - equal:
          path: spec.template.metadata.annotations.containous/powpow
          value: podAnnotations
  - it: should have envFrom with specified values
    set:
      envFrom:
        - configMapRef:
            name: config-map-name
        - secretRef:
            name: secret-name
    asserts:
      - equal:
          path: spec.template.spec.containers[0].envFrom[0].configMapRef.name
          value: config-map-name
      - equal:
          path: spec.template.spec.containers[0].envFrom[1].secretRef.name
          value: secret-name
  - it: should have priorityClassName
    set:
      priorityClassName: important
    asserts:
      - equal:
          path: spec.template.spec.priorityClassName
          value: important
  - it: should have merged securityContext
    set:
      podSecurityContext:
        readOnlyRootFilesystem: false
      securityContext:
        runAsUser: 1000
    asserts:
      - equal:
          path: spec.template.spec.securityContext.fsGroup
          value: 65532
      - equal:
          path: spec.template.spec.securityContext.readOnlyRootFilesystem
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1000
  - it: should have pvc with specified value
    set:
      persistence:
        enabled: true
        existingClaim: existing-pvc
    asserts:
      - equal:
          path: spec.template.spec.volumes[0].persistentVolumeClaim.claimName
          value: existing-pvc
